==== leetcode.47.全排列II ====
* 题目描述：
给定一个可包含重复数字的序列 nums ，按任意顺序 返回所有不重复的全排列。

* 输入描述：
第一行一个整数n
第二行n个整数

* 输出描述：
每行一个排列组合

==== 示例 ====
示例1：
输入：
3
1 1 3

输出：
1 1 2 
1 2 1 
2 1 1 
--------------------
示例2：
输入：
3
1 2 3

输出：
1 2 3 
1 3 2 
2 1 3 
2 3 1 
3 1 2 
3 2 1

============
解题：在leetcode.46.全排列的基础上考虑去重的问题。
我们选择对原数组排序，保证相同的数字都相邻，然后每次填入的数一定是这个数所在重复数集合中
「从左往右第一个未被填过的数字」，即如下的判断条件：
    if (i > 0 && nums[i] == nums[i - 1] && !vis[i - 1]) {
        continue;
    }
这个判断条件保证了对于重复数的集合，一定是从左往右逐个填入的。
假设我们有 3 个重复数排完序后相邻，那么我们一定保证每次都是拿从左往右第一个未被填过的数字，
即整个数组的状态其实是保证了 [未填入，未填入，未填入] 
到 [填入，未填入，未填入]，
再到 [填入，填入，未填入]，
最后到 [填入，填入，填入] 的过程的，因此可以达到去重的目标。

通过率：100%